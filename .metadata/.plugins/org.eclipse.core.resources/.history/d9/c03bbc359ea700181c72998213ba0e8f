package com.scripteasy.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.stereotype.Service;

import com.scripteasy.DTO.SchemaDTO;
import com.scripteasy.DTO.SchemaNewDTO;
import com.scripteasy.domain.DataBaseSE;
import com.scripteasy.domain.SchemaSE;
import com.scripteasy.repositories.DataBaseRepository;
import com.scripteasy.repositories.SchemaRepository;
import com.scripteasy.services.excpetion.ObjectNotFoundException;



@Service
public class SchemaService {


	@Autowired
	private SchemaRepository repo;


	@Autowired
	UserService userService;

	@Autowired
	private DataBaseRepository databaseRepository;

	public SchemaSE find(Integer id) {
		Optional<SchemaSE> obj = repo.findById(id);
		return obj.orElseThrow(
				() -> new ObjectNotFoundException("Obect not found! Id: " + id + ", Type: " + SchemaSE.class.getName()));
	}

	public Page<SchemaSE> search(String name, List<Integer> ids, Integer page, Integer linesPerPage, String orderBy,
			String direction) {
		PageRequest pageRequest = PageRequest.of(page, linesPerPage, Direction.valueOf(direction), orderBy);
		List<DataBaseSE> categories = databaseRepository.findAllById(ids); 
		return repo.findDistinctByNameContainingAndDataBaseSEIn(name, categories, pageRequest);

	}
	
	public SchemaSE fromDTO(SchemaDTO objDto) {
		return new SchemaSE(objDto.getId(), objDto.getName(),  null);

	}

	public SchemaSE fromDTO(SchemaNewDTO objDto) {
		
	
		SchemaSE SchemaSE = new SchemaSE(null, objDto.getName(), objDto.getDatabase());
		return SchemaSE;

	}
	
	private void updateData(SchemaSE newObj, SchemaSE obj) {
		newObj.setName(obj.getName());

	}
}
