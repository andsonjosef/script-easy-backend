package com.scripteasy.repositories;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.scripteasy.domain.DataBaseSE;
import com.scripteasy.domain.UserSE;

@Repository
public interface DataBaseRepository extends JpaRepository<DataBaseSE, Integer> {
	
	@Transactional(readOnly=true)
	Page<DataBaseSE> findByUser(UserSE user, Pageable pageRequest);
	
	@Transactional(readOnly=true)
	Page<DataBaseSE> findDistinctByNameContainingAndUserIn(String name, UserSE user, Pageable pageRequest);
	
	
	@Transactional(readOnly=true)
	@Query("SELECT obj FROM DataBaseSE obj WHERE obj.user.id = :userId ORDER BY obj.name")
	public List<DataBaseSE> findBases(@Param("userId")Integer user_id);
	
	@Transactional(readOnly = true)
	DataBaseSE findByNameContainingAndUserIn(String name,UserSE user);
}
}
