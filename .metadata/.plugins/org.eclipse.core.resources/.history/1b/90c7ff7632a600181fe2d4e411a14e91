package com.scripteasy.services;

import java.util.Date;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.stereotype.Service;

import com.scripteasy.domain.DataBaseSE;
import com.scripteasy.repositories.DataBaseRepository;
import com.scripteasy.security.UserSS;
import com.scripteasy.services.excpetion.AuthorizationException;
import com.scripteasy.services.excpetion.ObjectNotFoundException;



@Service
public class DataBaseService {


	@Autowired
	private DataBaseRepository repo;


	@Autowired
	UserService userService;

	public DataBaseSE find(Integer id) {
		Optional<DataBaseSE> obj = repo.findById(id);
		return obj.orElseThrow(
				() -> new ObjectNotFoundException("Obect not found! Id: " + id + ", Type: " + DataBaseSE.class.getName()));
	}

	@Transactional
	public DataBaseSE insert(DataBaseSE obj) {
		obj.setId(null);
		obj.setUser(userService.find(obj.getUser().getId()));
		obj = repo.save(obj);

		return obj;
	}

	public Page<DataBaseSE> findPage(Integer page, Integer linesPerPage, String orderBy, String direction) {
		UserSS user = UserSService.authenticated();
		if (user == null) {
			throw new AuthorizationException("Acess denied");
		}
		PageRequest pageRequest = PageRequest.of(page, linesPerPage, Direction.valueOf(direction), orderBy);
		UserSE user = userService.find(user.getId());
		return repo.findByUser(user, pageRequest);
	}
}
